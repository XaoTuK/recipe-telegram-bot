import requests
import json
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes

TELEGRAM_TOKEN = "8462003240:AAEzP4drh3jb6FErp26qr_HaRMjQF9i1OII"
YANDEX_API_KEY = "AQVN21SkiHPTzTQ7PRtnMipVWr17W-hEv0WNqn8c"
FOLDER_ID = "b1gne1sf06u2lnsieuk9"

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        products = update.message.text
        await update.message.reply_text(f"üîç –ò—â—É —Ä–µ—Ü–µ–ø—Ç –¥–ª—è: {products}...")
        
        headers = {
            "Authorization": f"Api-Key {YANDEX_API_KEY}",
            "Content-Type": "application/json",
            "User-Agent": "TelegramBot/1.0"
        }
        
        data = {
            "modelUri": f"gpt://{FOLDER_ID}/yandexgpt",
            "completionOptions": {
                "stream": False,
                "temperature": 0.7,
                "maxTokens": 1500
            },
            "messages": [
                {
                    "role": "system",
                    "text": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —à–µ—Ñ-–ø–æ–≤–∞—Ä. –°–æ–∑–¥–∞–≤–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã —Å —á–µ—Ç–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π."
                },
                {
                    "role": "user", 
                    "text": f"–°–æ–∑–¥–∞–π –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç—ã: {products}. –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç:\n1. –ù–ê–ó–í–ê–ù–ò–ï –ë–õ–Æ–î–ê\n2. –ò–ù–ì–†–ï–î–ò–ï–ù–¢–´ (—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞–º–∏)\n3. –ü–†–ò–ì–û–¢–û–í–õ–ï–ù–ò–ï (–ø–æ—à–∞–≥–æ–≤–æ)\n4. –í–†–ï–ú–Ø –ì–û–¢–û–í–ö–ò\n5. –°–û–í–ï–¢–´"
                }
            ]
        }
        
        print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –Ø–Ω–¥–µ–∫—Å API...")
        
        response = requests.post(
            "https://llm.api.cloud.yandex.net/foundationModels/v1/completion",
            json=data,
            headers=headers,
            timeout=20
        )
        
        print(f"üì• –û—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            recipe = result['result']['alternatives'][0]['message']['text']
            print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –Ø–Ω–¥–µ–∫—Å GPT")
            await update.message.reply_text(f"üç≥ {recipe}")
        else:
            error_msg = f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}\n"
            try:
                error_detail = response.json()
                error_msg += f"–î–µ—Ç–∞–ª–∏: {error_detail}"
            except:
                error_msg += f"–¢–µ–∫—Å—Ç: {response.text}"
            
            print(error_msg)
            await update.message.reply_text("‚ö†Ô∏è –Ø–Ω–¥–µ–∫—Å GPT –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            
    except requests.exceptions.Timeout:
        await update.message.reply_text("‚è∞ –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ –Ø–Ω–¥–µ–∫—Å GPT")
    except requests.exceptions.ConnectionError:
        await update.message.reply_text("üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å GPT")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

app = Application.builder().token(TELEGRAM_TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –Ø–Ω–¥–µ–∫—Å GPT...")
    print(f"üîë API Key: {YANDEX_API_KEY[:10]}...")
    print(f"üìÅ Folder ID: {FOLDER_ID}")
    app.run_polling()
